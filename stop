[33mcommit 25652dbb29c81f57bbab07e0a7ed7a2d30f8eb11[m[33m ([m[1;36mHEAD -> [m[1;32mmaster[m[33m, [m[1;31morigin/master[m[33m, [m[1;31morigin/HEAD[m[33m)[m
Author: Ingo Rohlfing <i.rohlfing@uni-koeln.de>
Date:   Sat Apr 18 21:19:43 2020 +0200

    Updated documentation

[1mdiff --git a/R/deviant.R b/R/deviant.R[m
[1mindex 8fc029e..029f0d7 100644[m
[1m--- a/R/deviant.R[m
[1m+++ b/R/deviant.R[m
[36m@@ -1,5 +1,3 @@[m
[31m-[m
[31m-[m
 #' Identification of the most deviant case[m
 #'[m
 #' Identification of the most deviant case (= worst predicted case),[m
[36m@@ -13,7 +11,7 @@[m
 #'[m
 #' @param lmobject Object generated with \code{\link[stats]{lm}}[m
 #'[m
[31m-#' @return The most deviant case having the largest absolute[m
[32m+[m[32m#' @return The most deviant case with the largest absolute[m
 #' residual of all cases.[m
 #'[m
 #' @importFrom stats lm residuals[m

[33mcommit c76aca9a91bcadb07c9cffd0805510bda863f03f[m
Author: Ingo Rohlfing <i.rohlfing@uni-koeln.de>
Date:   Sat Apr 18 21:17:18 2020 +0200

    Updated documentation

[1mdiff --git a/DESCRIPTION b/DESCRIPTION[m
[1mindex f1804c4..40b9dc5 100644[m
[1m--- a/DESCRIPTION[m
[1m+++ b/DESCRIPTION[m
[36m@@ -18,7 +18,7 @@[m [mLazyData: true[m
 Imports: [m
     stats,[m
     ggplot2[m
[31m-RoxygenNote: 7.0.2[m
[32m+[m[32mRoxygenNote: 7.1.0[m
 URL: https://github.com/ingorohlfing/MMRcaseselection[m
 BugReports: https://github.com/ingorohlfing/MMRcaseselection[m
 Suggests: [m
[1mdiff --git a/man/predint.Rd b/man/predint.Rd[m
[1mindex 9062b8e..c7b7af3 100644[m
[1m--- a/man/predint.Rd[m
[1m+++ b/man/predint.Rd[m
[36m@@ -10,7 +10,7 @@[m [mpredint(lmobject, piwidth = 0.95)[m
 \arguments{[m
 \item{lmobject}{Object generated with \code{\link[stats]{lm}}}[m
 [m
[31m-\item{piwidth}{Width of the prediction interval.}[m
[32m+[m[32m\item{piwidth}{Width of the prediction interval (default is 0.95).}[m
 }[m
 \value{[m
 A dataframe with the observed outcome, fitted outcome,[m
[36m@@ -20,8 +20,8 @@[m [mof cases as typical or deviant.[m
 \description{[m
 Case are designated as typical (= well predicted) and deviant[m
 (= badly predicted) based on the prediction interval. The x\% prediction[m
[31m-interval represents the range of outcome values that we expect to include[m
[31m-x\% of outcome values in future repeated samples. For example, a 95\%[m
[32m+[m[32minterval represents the range that we expect to include[m
[32m+[m[32mx\% of outcome values in repeated samples. For example, a 95\%[m
 prediction interval ranging from 0-5 conveys that 95\% of future outcome[m
 values will be in the range of 0-5. If the observed outcome[m
 is inside the prediction interval, the case is classified (or designated) as[m
[1mdiff --git a/man/predint_plot.Rd b/man/predint_plot.Rd[m
[1mindex 3792e1d..7c59f1a 100644[m
[1m--- a/man/predint_plot.Rd[m
[1m+++ b/man/predint_plot.Rd[m
[36m@@ -2,7 +2,7 @@[m
 % Please edit documentation in R/classification.R[m
 \name{predint_plot}[m
 \alias{predint_plot}[m
[31m-\title{Plot of typical and deviant cases based on prediction interval}[m
[32m+[m[32m\title{Plot of typical and deviant cases with prediction intervals}[m
 \usage{[m
 predint_plot(pred_df)[m
 }[m
[1mdiff --git a/man/resid_std.Rd b/man/resid_std.Rd[m
[1mindex fc86d56..8cf57fc 100644[m
[1m--- a/man/resid_std.Rd[m
[1m+++ b/man/resid_std.Rd[m
[36m@@ -11,7 +11,7 @@[m [mresid_std(lmobject, stdshare = 1)[m
 \item{lmobject}{Object generated with \code{\link[stats]{lm}}}[m
 [m
 \item{stdshare}{Share of standard deviation of residuals distinguishing[m
[31m-between typical and deviant cases.}[m
[32m+[m[32mbetween typical and deviant cases (default is 1).}[m
 }[m
 \value{[m
 A dataframe with the observed outcome, fitted outcome,[m

[33mcommit de2bbf0aac4f541eef7748482d375029ddc67352[m
Author: Ingo Rohlfing <i.rohlfing@uni-koeln.de>
Date:   Sat Apr 18 21:16:15 2020 +0200

    Updated documentation

[1mdiff --git a/R/classification.R b/R/classification.R[m
[1mindex 4ea5543..19730e7 100644[m
[1m--- a/R/classification.R[m
[1m+++ b/R/classification.R[m
[36m@@ -3,8 +3,8 @@[m
 #'[m
 #' Case are designated as typical (= well predicted) and deviant[m
 #' (= badly predicted) based on the prediction interval. The x\% prediction[m
[31m-#' interval represents the range of outcome values that we expect to include[m
[31m-#' x\% of outcome values in future repeated samples. For example, a 95\%[m
[32m+[m[32m#' interval represents the range that we expect to include[m
[32m+[m[32m#' x\% of outcome values in repeated samples. For example, a 95\%[m
 #' prediction interval ranging from 0-5 conveys that 95\% of future outcome[m
 #' values will be in the range of 0-5. If the observed outcome[m
 #' is inside the prediction interval, the case is classified (or designated) as[m
[36m@@ -16,7 +16,7 @@[m
 #' (\url{https://doi.org/10.1111/spsr.12052})[m
 #'[m
 #' @param lmobject Object generated with \code{\link[stats]{lm}}[m
[31m-#' @param piwidth Width of the prediction interval.[m
[32m+[m[32m#' @param piwidth Width of the prediction interval (default is 0.95).[m
 #'[m
 #' @return A dataframe with the observed outcome, fitted outcome,[m
 #' upper and lower bound of the \% prediction interval and classification[m
[36m@@ -55,7 +55,7 @@[m [mpredint <- function(lmobject, piwidth = 0.95) {[m
   }[m
 }[m
 [m
[31m-#' Plot of typical and deviant cases based on prediction interval[m
[32m+[m[32m#' Plot of typical and deviant cases with prediction intervals[m
 #'[m
 #' Presented in Rohlfing, Ingo and Peter Starke (2013):[m
 #' Building on Solid Ground: Robust Case Selection in Multi-Method Research.[m
[36m@@ -102,7 +102,7 @@[m [mpredint_plot <- function(pred_df) {[m
 #'[m
 #' @param lmobject Object generated with \code{\link[stats]{lm}}[m
 #' @param stdshare Share of standard deviation of residuals distinguishing[m
[31m-#' between typical and deviant cases.[m
[32m+[m[32m#' between typical and deviant cases (default is 1).[m
 #'[m
 #' @return A dataframe with the observed outcome, fitted outcome,[m
 #' residual standard deviation and classification of cases as typical[m

[33mcommit 99a50e710859dd6852f5cab9eaba9396d4c9e4db[m
Author: Ingo Rohlfing <i.rohlfing@uni-koeln.de>
Date:   Sat Apr 18 21:08:20 2020 +0200

    Updated description

[1mdiff --git a/DESCRIPTION b/DESCRIPTION[m
[1mindex 2d230c0..f1804c4 100644[m
[1m--- a/DESCRIPTION[m
[1m+++ b/DESCRIPTION[m
[36m@@ -9,11 +9,9 @@[m [mAuthors@R:[m
 Depends: R (>= 2.10)          [m
 Description: Researchers doing a mixed-methods analysis (nested analysis) can[m
     use the package for two purposes. The package allows one to designate [m
[31m-    cases as typical, deviant or diverse. Second, one can use different[m
[31m-    case selection strategies for choosing typical, deviant or diverse[m
[31m-    cases. The documentations of the case designation and selection [m
[31m-    functions contain references to the articles or books proposing[m
[31m-    developing the guidelines implemented in this package.[m
[32m+[m[32m    cases as typical, deviant or extreme. Second, one can use different[m
[32m+[m[32m    case selection strategies for choosing typical, deviant and extreme[m
[32m+[m[32m    cases.[m
 License: GPL-3[m
 Encoding: UTF-8[m
 LazyData: true[m

[33mcommit 6bc0ef0036804b011637d6d06508368a4da5ac60[m
Author: Ingo Rohlfing <i.rohlfing@uni-koeln.de>
Date:   Thu Apr 16 23:01:04 2020 +0200

    Revised vignette

[1mdiff --git a/vignettes/Pathway-case.Rmd b/vignettes/Pathway-case.Rmd[m
[1mindex b7edeeb..55483cb 100644[m
[1m--- a/vignettes/Pathway-case.Rmd[m
[1m+++ b/vignettes/Pathway-case.Rmd[m
[36m@@ -20,9 +20,9 @@[m [mknitr::opts_chunk$set([m
 library(MMRcaseselection)[m
 ```[m
 [m
[31m-The choice of a pathway case aims to maximize the chances of finding evidence for a mechanism. Originally, it was proposed by Gerring ([2007](https://doi.org/10.1177%2F0010414006290784)). He defines the *pathway value* of a case as  $|resid_{i_{reduced}}-resid_{i_{full}}|$ if it holds that $|resid_{i_{reduced}}| > |resid_{i_{full}}|$, where 'full' stands for the full regression model, 'reduced' for the model that lacks the pathway variable of theoretical interest nad $i$ being a case index. Following Gerring, one should only choose among the cases meeting the requirement that $|resid_{i_{reduced}}| > |resid_{i_{full}}|$. In follow up research, Weller and Barnes ([2014](https://doi.org/10.1017/CBO9781139644501)) propose a different calculation of the pathway value, $|resid_{i_{reduced}}|-|resid_{i_{full}}|$, without specifying an additional requirement about the relationship between the full model and reduced model residuals.[m
[32m+[m[32mThe pathway was originally proposed by Gerring ([2007](https://doi.org/10.1177%2F0010414006290784)). He defines the *pathway value* of a case as  $|resid_{i_{reduced}}-resid_{i_{full}}|$ if it holds that $|resid_{i_{reduced}}| > |resid_{i_{full}}|$, where 'full' stands for the full regression model, 'reduced' for the model that lacks the pathway variable of theoretical interest and $i$ being a case index. Following Gerring, one should only choose among the cases meeting the requirement that $|resid_{i_{reduced}}| > |resid_{i_{full}}|$. In follow up research, Weller and Barnes ([2014](https://doi.org/10.1017/CBO9781139644501)) propose a different calculation of the pathway value, $|resid_{i_{reduced}}|-|resid_{i_{full}}|$, without specifying an additional requirement about the relationship between the full model residuals and reduced model residuals.[m
 [m
[31m-The function `pathway()` calculaes both types of pathway values and requires the full regression model and the reduced regression model as input. Both models must be fed into the function as `lm` objects. The dataframe generated by the function contains all variables from the full model plus the following variables:[m
[32m+[m[32mThe function `pathway()` calculates both types of pathway values and requires the full regression model and the reduced regression model as input. Both models must be `lm` objects. The dataframe generated by the function contains all variables from the full model plus the following variables:[m
 [m
 - `full_resid`: Residuals in full model[m
 - `reduced_resid`: Residuals in reduced model[m
[36m@@ -41,7 +41,7 @@[m [mThe visualization of pathway values is different from the presentation of ordina[m
 pathway_xvr(df_full, df_reduced, pathway_type = "pathway_wb")[m
 ```[m
 [m
[31m-If the option is `pathway_type = "pathway_gvalue"`, the Gerring pathway values are plotted against the pathway variable. A color scheme is used to distinguish the cases that meet the pathway case requirement ("yes") from those that don't ("no"). [m
[32m+[m[32mThe Gerring pathway values are plotted against the pathway variable if the option is `pathway_type = "pathway_gvalue". A color scheme is used to distinguish the cases that meet the pathway case requirement ("yes") from those that don't ("no").[m[41m [m
 ```{r, fig.height = 6, fig.width = 6}[m
 pathway_xvr(df_full, df_reduced, pathway_type = "pathway_gvalue")[m
 ```[m

[33mcommit 3b059f1e01549f929f44ea60fc638c17dac854af[m
Author: Ingo Rohlfing <i.rohlfing@uni-koeln.de>
Date:   Thu Apr 16 22:51:54 2020 +0200

    Revised vignette

[1mdiff --git a/vignettes/Most-typical-and-most-deviant.Rmd b/vignettes/Most-typical-and-most-deviant.Rmd[m
[1mindex 642c80b..48edf67 100644[m
[1m--- a/vignettes/Most-typical-and-most-deviant.Rmd[m
[1m+++ b/vignettes/Most-typical-and-most-deviant.Rmd[m
[36m@@ -20,19 +20,14 @@[m [mknitr::opts_chunk$set([m
 library(MMRcaseselection)[m
 ```[m
 [m
[31m-One can use four functions to choose four *types of cases* without classifying all cases as either typical or deviant. The most typical and deviant cases are proposed by Seawright and Gerring ([2008](https://doi.org/10.1177/1065912907313077)). [m
[31m-[m
[31m-* The most typical case has the smallest residual of all cases.[m
[31m-* The most deviant case has the largest residual of all cases.[m
[31m-[m
[31m-The two functions `most_typical()` and `most_deviant()` work in the same way and output the case with its residual. The only required input is the result of a linear regression analysis as an `lm` object.[m
[32m+[m[32mOne can use four functions to choose four *types of cases* without classifying all cases as either typical or deviant. The *most typical* and *most deviant* cases are proposed by Seawright and Gerring ([2008](https://doi.org/10.1177/1065912907313077)). The most typical case has the smallest residual of all cases. The most deviant case has the largest residual of all cases. The two functions `most_typical()` and `most_deviant()` work in the same way and show you the case with its residual. The input into the function is an `lm` object.[m
 ```{r}[m
 df <- lm(mpg ~ disp + wt, data = mtcars)[m
 most_typical(df)[m
 most_deviant(df)[m
 ```[m
 [m
[31m-The most deviant case does not distinguish between cases that have a large negative or a large positive residual. Cases with a large negative residual are *overpredicted* because the predicted outcome is much higher than the observed outcome. Cases with a large positive residual are *underpredicted* because the predicted outcome is much lower than the observed outcome. It might not matter whether a case is overpredicted or underpredicted because both subtypes of outliers can have the same type of deviance. However, one might be interested in knowing whether a case has a large positive or a large negative residual to treat them on their own ground. The functions `most_overpredicted()` and `most_underpredicted()` show what the deviant cases with the largest positive and negative residuals are.[m
[32m+[m[32mThe most deviant case does not distinguish between cases that have a large negative and a large positive residual. Cases with a negative residual are *overpredicted* because the predicted outcome is higher than the observed outcome. Cases with a positive residual are *underpredicted* because the predicted outcome is lower than the observed outcome. It might not matter whether a case is overpredicted or underpredicted because both subtypes of outliers can have the same type of deviance. However, one might be interested in knowing whether a case has a positive or negative residual and what the most overpredicted and underpredicted cases are. This is what the functions `most_overpredicted()` and `most_underpredicted()` achieve, each taking an `lm` object as input.[m
 ```{r}[m
 # largest positive residual[m
 most_underpredicted(df)[m

[33mcommit 12865a19cb48fabf32a7b22cf92fb8cf326c4501[m
Author: Ingo Rohlfing <i.rohlfing@uni-koeln.de>
Date:   Wed Apr 15 21:35:56 2020 +0200

    Revised vignette

[1mdiff --git a/vignettes/Extreme-case.Rmd b/vignettes/Extreme-case.Rmd[m
[1mindex 50f8715..e418ac3 100644[m
[1m--- a/vignettes/Extreme-case.Rmd[m
[1m+++ b/vignettes/Extreme-case.Rmd[m
[36m@@ -18,7 +18,7 @@[m [mknitr::opts_chunk$set([m
 library(MMRcaseselection)[m
 ```[m
 [m
[31m-The extreme case is selected with regard to the cases' values on an independent variable or the outcome. It is defined by the absolute difference between the case value on the chosen variable and the variable mean. For example, for the outcome the *extremeness* of a case is defined as $|Y_i-\hat{Y}|$, with $i$ being the case index. The extreme case then simply is the case with the maximum absolute difference. (see the article by Seawright ([2016](https://doi.org/10.1177/0049124116643556))) Depending on the research question or substantive interest, one might be interested in the extreme case in the lower or upper range of a variable. Extremeness is then calculated with $Y_i-\hat{Y}$.[m
[32m+[m[32mThe extreme case is selected with regard to the cases' values on an independent variable or the outcome. It is defined by the absolute difference between the case value on the chosen variable and the variable's mean. For example, for the outcome the *extremeness* of a case is defined as $|Y_i-\hat{Y}|$, with $i$ being the case index. The extreme case is the case with the maximum absolute difference. (see Seawright ([2016](https://doi.org/10.1177/0049124116643556))) Depending on the research question or substantive interest, one might be interested in the extreme case in the lower or upper range of a variable. Extremeness is then calculated with $Y_i-\hat{Y}$.[m
 [m
 The `extreme_on_x()` and `extreme_on_y()` functions take an `lm` object as input and calculate the extremeness of all cases. For extremeness on an independent variable, one additionally needs to specify the variable of interest as a *character*. The output is a dataframe and cases are ordered by absolute extremeness in decreasing order. The dataframe also presents the extremeness values that show whether the case is extreme in the lower range of the variable (negative values) or the positive range (positive values).[m
 ```{r}[m

[33mcommit 66ce1aa0f5ef4640855364b547f0e02f86f5f332[m
Author: Ingo Rohlfing <i.rohlfing@uni-koeln.de>
Date:   Wed Apr 15 21:33:01 2020 +0200

    Revised vignette

[1mdiff --git a/vignettes/Classification-as-typical-and-deviant.Rmd b/vignettes/Classification-as-typical-and-deviant.Rmd[m
[1mindex 4bdda2d..7b3fb6a 100644[m
[1m--- a/vignettes/Classification-as-typical-and-deviant.Rmd[m
[1m+++ b/vignettes/Classification-as-typical-and-deviant.Rmd[m
[36m@@ -21,9 +21,11 @@[m [mlibrary(MMRcaseselection)[m
 library(ggplot2) # for illustration of plot customization[m
 ```[m
 [m
[31m-The classification (designation, assignment) of cases as typical and deviant (or another) type needs to be distinguished from the actual choice of cases belonging to a specific type. The package offers two ways of classifying cases. First, one can designate cases using an % *prediction interval* or the *standard deviation of the residuals*. Both classification techniques require an `lm` object as input. [m
[32m+[m[32mThe classification (designation, assignment) of cases as typical and deviant needs to be distinguished from the actual choice of cases that are of a specific type. The package offers two ways of classifying cases. First, one can designate cases using the *prediction interval* or the *standard deviation of the residuals*. Both classification techniques require an `lm` object as input.[m[41m [m
 [m
[31m-The approach using the prediction interval additionally requires the specification of the width of the interval. The % prediction interval represents the range of outcome values within which 95% of future outcome values are expected to fall. Following Rohlfing and Starke ([2013](https://doi.org/10.1111/spsr.12052)), a case is designated as typical if the observed outcome value is inside the interval and as deviant otherwise. Here is a simple example using the in-built `mtcars` dataset and a 90% prediction interval. The output of the function is a dataframe with the observed and fitted outcome value, the upper and lower bound of the prediction interval and the case status based on the fitted value and the prediction interval. The default value is 0.95 (for no specific reason).[m
[32m+[m[32mThe approach using the prediction interval additionally requires the specification of the width of the interval. The % prediction interval represents the range of outcome values within which 95% of future outcome values are expected to fall in repeated samples. Following Rohlfing and Starke ([2013](https://doi.org/10.1111/spsr.12052)), a case is designated as typical if the observed outcome value is inside the interval and as deviant otherwise.[m[41m [m
[32m+[m
[32m+[m[32mHere is a simple example using the `mtcars` dataset and a 90% prediction interval (for no specific reason, the default value is 0.95). The output of the function is a dataframe with the observed and fitted outcome values, the upper and lower bound of the prediction interval and the case status based on the fitted value and the prediction interval that is specific to each case.[m
 ```{r}[m
 df <- lm(mpg ~ disp + wt, data = mtcars)[m
 pi_df <- predint(df, piwidth = 0.9)[m
[36m@@ -32,14 +34,14 @@[m [mhead(pi_df)[m
 [m
 The designation of cases based on the prediction interval can be visualized with the `predint_plot()` command. The graph plots observed vs. fitted outcome values together with the % prediction interval. The plot is a `gg` object and can be edited with the usual commands of the `ggplot2` package. [m
 [m
[31m-The input has to be a dataframe produced with `predint()`. Each case has its own interval because they can differ between cases. The color scheme is the [viridis color palette](https://CRAN.R-project.org/package=viridis) that is accustomed for colorblind readers and also works when printed in grey scale. If the viridis palette is not preferred, one can substitute it with any other `scale_color_*` scheme by adding it to the command.[m
[32m+[m[32mThe input into the plotting function has to be a dataframe produced with `predint()`. The color scheme is the [viridis color palette](https://CRAN.R-project.org/package=viridis) that is accustomed for colorblind readers and also works when printed in grey scale. If the viridis palette is not preferred, one can substitute it with any other `scale_color_*` scheme by adding it to the command.[m
 ```{r, fig.height = 6, fig.width = 6}[m
 predint_plot(pi_df)[m
 # Using scale_color_brewer() instead of the viridis palette.[m
 predint_plot(pi_df) + scale_color_brewer()[m
 ```[m
 [m
[31m-An alternative classification technique following Lieberman ([2005](https://doi.org/10.1017/S0003055405051762)) uses the *standard deviation of the residuals*. The command for assigning cases and typical and deviant is `resid_std()`. The input is an `lm` object and `stdshare` determines how large the share of the residual standard deviation should be to distinguish typical from deviant cases. The default value is 1 (for no specific reason).[m
[32m+[m[32mAn alternative classification technique following Lieberman ([2005](https://doi.org/10.1017/S0003055405051762)) uses the *standard deviation of the residuals*. The command for assigning cases and typical and deviant is `resid_std()`. The specification of `stdshare` determines how large the share of the residual standard deviation should be to distinguish typical from deviant cases. The default value is 1 (for no specific reason).[m
 ```{r}[m
 resid_df <- resid_std(df, stdshare = 1.5)[m
 head(resid_df)[m

[33mcommit 36b6674ab88d33fe870cfefceaaeb60d99ff02e7[m
Author: Ingo Rohlfing <i.rohlfing@uni-koeln.de>
Date:   Tue Apr 7 23:27:30 2020 +0200

    Added hex sticker

[1mdiff --git a/README.md b/README.md[m
[1mindex e8a4564..e744b81 100644[m
[1m--- a/README.md[m
[1m+++ b/README.md[m
[36m@@ -1,6 +1,8 @@[m
[32m+[m[32m# MMRcaseselection <img src="man/figures/MMRhex.png" height="200" align="right">[m
[32m+[m
 [![Project Status: WIP – Initial development is in progress, but there has not yet been a stable, usable release suitable for the public.](https://www.repostatus.org/badges/latest/wip.svg)](https://www.repostatus.org/#wip)[m
 [m
[31m-# MMRcaseselection[m
[32m+[m[32m## Overview[m
 Classification and choice of cases for case studies based on regression results.[m
 [m
 **This is work in progress.** For now, the plan is to implement some proposals for the classification of cases as typical, deviant or pathway cases and case selection. At this stage, the focus is on single cases. [m
[1mdiff --git a/man/figures/MMRhex.png b/man/figures/MMRhex.png[m
[1mnew file mode 100644[m
[1mindex 0000000..ac51944[m
Binary files /dev/null and b/man/figures/MMRhex.png differ

[33mcommit 75727c7b465b8bff91cc496b9ae1a99f646a3b80[m
Author: Ingo Rohlfing <i.rohlfing@uni-koeln.de>
Date:   Thu Apr 2 23:12:31 2020 +0200

    Simplified function, adapted documentation

[1mdiff --git a/R/pathway.R b/R/pathway.R[m
[1mindex a72c03e..5ad185b 100644[m
[1m--- a/R/pathway.R[m
[1m+++ b/R/pathway.R[m
[36m@@ -27,16 +27,16 @@[m
 #'[m
 #' - all full model variables,[m
 #'[m
[31m-#' - full model residuals (\code{full.resid}),[m
[32m+[m[32m#' - full model residuals (\code{full_resid}),[m
 #'[m
[31m-#' - reduced model residuals (\code{reduced.resid}),[m
[32m+[m[32m#' - reduced model residuals (\code{reduced_resid}),[m
 #'[m
[31m-#' - pathway values following Weller/Barnes (\code{pathway.wb}),[m
[32m+[m[32m#' - pathway values following Weller/Barnes (\code{pathway_wb}),[m
 #'[m
[31m-#' - pathway values following Gerring (\code{pathway.gvalue}),[m
[32m+[m[32m#' - pathway values following Gerring (\code{pathway_gvalue}),[m
 #'[m
 #' - variable showing whether Gerring's criterion for a pathway[m
[31m-#' case is met (\code{pathway.gstatus})[m
[32m+[m[32m#' case is met (\code{pathway_gstatus})[m
 #'[m
 #' @importFrom stats lm residuals[m
 #'[m
[36m@@ -77,10 +77,9 @@[m [mpathway <- function(full_model, reduced_model) {[m
 #' @param full_model Full model including covariate of interest[m
 #' (= pathway variable)[m
 #' @param reduced_model Reduced model excluding covariate of interest[m
[31m-#' @param pathway_var Pathway variable dropped from full model[m
 #' @param pathway_type Type of pathway values. \code{pathway_wb} are[m
[31m-#' pathway values proposed by Weller and Barnes. \code{pathway_g} are values[m
[31m-#' as calculated by Gerring.[m
[32m+[m[32m#' pathway values proposed by Weller and Barnes. \code{pathway_gvalue}[m
[32m+[m[32m#' are values as calculated by Gerring.[m
 #'[m
 #' @return A plot of the chosen type of pathway values against the pathway[m
 #' variable created with \code{\link{ggplot2}}.[m
[36m@@ -88,26 +87,28 @@[m [mpathway <- function(full_model, reduced_model) {[m
 #' @examples[m
 #' df_full <- lm(mpg ~ disp + wt, data = mtcars)[m
 #' df_reduced <- lm(mpg ~ wt, data = mtcars)[m
[31m-#' pathway_xvr(df_full, df_reduced, pathway_var = "disp",[m
[31m-#' pathway_type = "pathway_wb")[m
[32m+[m[32m#' pathway_xvr(df_full, df_reduced, pathway_type = "pathway_wb")[m
 #'[m
 #' @export[m
[31m-pathway_xvr <- function(full_model, reduced_model,[m
[31m-                        pathway_var = "variable", pathway_type = "residual") {[m
[32m+[m[32mpathway_xvr <- function(full_model, reduced_model, pathway_type) {[m
   pwdf <- pathway(full_model, reduced_model)[m
   if (pathway_type == "pathway_wb") {[m
     pwplot <- ggplot2::ggplot() +[m
[31m-      geom_point(data = pwdf, mapping = aes_string(x = pathway_var,[m
[31m-                                                   y = pathway_type)) +[m
[32m+[m[32m      geom_point(data = pwdf,[m
[32m+[m[32m                 mapping = aes_string(x = setdiff(names(full_model$model),[m
[32m+[m[32m                                                  names(reduced_model$model)),[m
[32m+[m[32m                                      y = pathway_type)) +[m
       geom_hline(yintercept = 0, linetype = 5) +[m
       scale_y_continuous("Pathway values") +[m
       theme_classic() -> pwplot[m
   }[m
   else{[m
     pwplot <- ggplot2::ggplot() +[m
[31m-      geom_point(data = pwdf, mapping = aes_string(x = pathway_var,[m
[31m-                                                   y = pathway_type,[m
[31m-                                                   color = "pathway_gtype")) +[m
[32m+[m[32m      geom_point(data = pwdf,[m
[32m+[m[32m                 mapping = aes_string(x = setdiff(names(full_model$model),[m
[32m+[m[32m                                                  names(reduced_model$model)),[m
[32m+[m[32m                                      y = pathway_type,[m
[32m+[m[32m                                      color = "pathway_gtype")) +[m
       geom_hline(yintercept = 0, linetype = 5) +[m
       scale_y_continuous("Pathway values") +[m
       scale_color_viridis_d("Reduced > full residuals") +[m
[1mdiff --git a/man/pathway.Rd b/man/pathway.Rd[m
[1mindex 09d7118..3f36f3d 100644[m
[1m--- a/man/pathway.Rd[m
[1m+++ b/man/pathway.Rd[m
[36m@@ -17,16 +17,16 @@[m [mA dataframe with[m
 [m
 - all full model variables,[m
 [m
[31m-- full model residuals (\code{full.resid}),[m
[32m+[m[32m- full model residuals (\code{full_resid}),[m
 [m
[31m-- reduced model residuals (\code{reduced.resid}),[m
[32m+[m[32m- reduced model residuals (\code{reduced_resid}),[m
 [m
[31m-- pathway values following Weller/Barnes (\code{pathway.wb}),[m
[32m+[m[32m- pathway values following Weller/Barnes (\code{pathway_wb}),[m
 [m
[31m-- pathway values following Gerring (\code{pathway.gvalue}),[m
[32m+[m[32m- pathway values following Gerring (\code{pathway_gvalue}),[m
 [m
 - variable showing whether Gerring's criterion for a pathway[m
[31m-case is met (\code{pathway.gstatus})[m
[32m+[m[32mcase is met (\code{pathway_gstatus})[m
 }[m
 \description{[m
 Calculation of pathway values, defined as the difference between residuals of[m
[1mdiff --git a/man/pathway_xvr.Rd b/man/pathway_xvr.Rd[m
[1mindex acbe472..c2dc803 100644[m
[1m--- a/man/pathway_xvr.Rd[m
[1m+++ b/man/pathway_xvr.Rd[m
[36m@@ -4,12 +4,7 @@[m
 \alias{pathway_xvr}[m
 \title{Plot of residuals against pathway variable}[m
 \usage{[m
[31m-pathway_xvr([m
[31m-  full_model,[m
[31m-  reduced_model,[m
[31m-  pathway_var = "variable",[m
[31m-  pathway_type = "residual"[m
[31m-)[m
[32m+[m[32mpathway_xvr(full_model, reduced_model, pathway_type)[m
 }[m
 \arguments{[m
 \item{full_model}{Full model including covariate of interest[m
[36m@@ -17,11 +12,9 @@[m [mpathway_xvr([m
 [m
 \item{reduced_model}{Reduced model excluding covariate of interest}[m
 [m
[31m-\item{pathway_var}{Pathway variable dropped from full model}[m
[31m-[m
 \item{pathway_type}{Type of pathway values. \code{pathway_wb} are[m
[31m-pathway values proposed by Weller and Barnes. \code{pathway_g} are values[m
[31m-as calculated by Gerring.}[m
[32m+[m[32mpathway values proposed by Weller and Barnes. \code{pathway_gvalue}[m
[32m+[m[32mare values as calculated by Gerring.}[m
 }[m
 \value{[m
 A plot of the chosen type of pathway values against the pathway[m
[36m@@ -33,7 +26,6 @@[m [mPlot of residuals against pathway variable[m
 \examples{[m
 df_full <- lm(mpg ~ disp + wt, data = mtcars)[m
 df_reduced <- lm(mpg ~ wt, data = mtcars)[m
[31m-pathway_xvr(df_full, df_reduced, pathway_var = "disp",[m
[31m-pathway_type = "pathway_wb")[m
[32m+[m[32mpathway_xvr(df_full, df_reduced, pathway_type = "pathway_wb")[m
 [m
 }[m
[1mdiff --git a/vignettes/Pathway-case.Rmd b/vignettes/Pathway-case.Rmd[m
[1mindex 9797617..b7edeeb 100644[m
[1m--- a/vignettes/Pathway-case.Rmd[m
[1m+++ b/vignettes/Pathway-case.Rmd[m
[36m@@ -36,16 +36,12 @@[m [mpw_out <- pathway(df_full, df_reduced) # calculation of pathway variables[m
 head(pw_out)[m
 ```[m
 [m
[31m-The visualization of pathway values is different from the presentation of ordinary residuals because two models are involved and an observed-vs-fitted plot is not meaningful. Following the approach by Weller and Barnes, the `pathway_xvr()` function plots the pathway values against the pathway variable. The option `pathwaytype = "pathway_wb` produces a plot for the Weller/Barnes values. The option `pathway_var` specifies the pathway variable to be included in the plot. The plot is a `gg` object that can be customized with the usual `ggplot2` options.[m
[32m+[m[32mThe visualization of pathway values is different from the presentation of ordinary residuals because two models are involved and an observed-vs-fitted plot is not meaningful. Following the approach by Weller and Barnes, the `pathway_xvr()` function plots the pathway values against the pathway variable. The option `pathwaytype = "pathway_wb` produces a plot for the Weller/Barnes values. The pathway variable is determined by the function and does not have to be specified. The plot is a `gg` object that can be customized with the usual `ggplot2` options.[m
 ```{r, fig.height = 6, fig.width = 6}[m
[31m-pathway_xvr(df_full, df_reduced, [m
[31m-            pathway_var = "disp", [m
[31m-            pathway_type = "pathway_wb")[m
[32m+[m[32mpathway_xvr(df_full, df_reduced, pathway_type = "pathway_wb")[m
 ```[m
 [m
 If the option is `pathway_type = "pathway_gvalue"`, the Gerring pathway values are plotted against the pathway variable. A color scheme is used to distinguish the cases that meet the pathway case requirement ("yes") from those that don't ("no"). [m
 ```{r, fig.height = 6, fig.width = 6}[m
[31m-pathway_xvr(df_full, df_reduced, [m
[31m-            pathway_var = "disp", [m
[31m-            pathway_type = "pathway_gvalue")[m
[32m+[m[32mpathway_xvr(df_full, df_reduced, pathway_type = "pathway_gvalue")[m
 ```[m

[33mcommit c59ae8244c54edaccff12ae3afda69d6c5073b14[m
Author: Ingo Rohlfing <i.rohlfing@uni-koeln.de>
Date:   Tue Mar 31 09:30:51 2020 +0200

    Changed input check for extreme_on_x

[1mdiff --git a/.gitignore b/.gitignore[m
[1mindex 167cde0..364bd93 100644[m
[1m--- a/.gitignore[m
[1m+++ b/.gitignore[m
[36m@@ -3,4 +3,4 @@[m
 .RData[m
 .Ruserdata[m
 inst/doc[m
[31m-testcode.R[m
[41m+[m
[1mdiff --git a/R/extreme.R b/R/extreme.R[m
[1mindex d916b61..a63d400 100644[m
[1m--- a/R/extreme.R[m
[1m+++ b/R/extreme.R[m
[36m@@ -35,21 +35,22 @@[m
 #'[m
 #' @export[m
 extreme_on_x <- function(lmobject = NULL, ind_var = NULL) {[m
[31m-  if (!is.null(ind_var)) {[m
[31m-    if (class(lmobject) == "lm") {[m
[31m-      tempx <- lmobject$model[, ind_var][m
[31m-      tempdf <- lmobject$model[m
[31m-      tempdf$`abs. extremeness` <- abs(tempx - mean(tempx))[m
[31m-      tempdf$extremeness <- tempx - mean(tempx)[m
[31m-      tempdf <- tempdf[order(tempdf$`abs. extremeness`, decreasing = T), ][m
[31m-      return(tempdf)[m
[31m-    }[m
[31m-    else{[m
[31m-      stop("lmobject input into function is not of class lm")[m
[31m-    }[m
[32m+[m[32m  if (is.null(ind_var)) {[m
[32m+[m[32m    stop("Please specify the independent variable")[m
[32m+[m[32m  }[m
[32m+[m[32m  if (class(lmobject) != "lm") {[m
[32m+[m[32m    stop("lmobject input into function is not of class lm")[m
[32m+[m[32m  }[m
[32m+[m[32m  if (isFALSE(ind_var %in% names(lmobject$model[, 2:ncol(lmobject$model)]))) {[m
[32m+[m[32m    stop("Chosen ind_var is not among the independent variables")[m
   }[m
   else{[m
[31m-    stop("Please specify the independent variable")[m
[32m+[m[32m    tempx <- lmobject$model[, ind_var][m
[32m+[m[32m    tempdf <- lmobject$model[m
[32m+[m[32m    tempdf$`abs. extremeness` <- abs(tempx - mean(tempx))[m
[32m+[m[32m    tempdf$extremeness <- tempx - mean(tempx)[m
[32m+[m[32m    tempdf <- tempdf[order(tempdf$`abs. extremeness`, decreasing = T), ][m
[32m+[m[32m    return(tempdf)[m
   }[m
 }[m
 [m

[33mcommit 58302f235acf599d04c5064a5fd94896029d4b47[m
Author: Ingo Rohlfing <i.rohlfing@uni-koeln.de>
Date:   Mon Mar 30 23:24:57 2020 +0200

    Corrected examples

[1mdiff --git a/vignettes/Pathway-case.Rmd b/vignettes/Pathway-case.Rmd[m
[1mindex 10045f9..9797617 100644[m
[1m--- a/vignettes/Pathway-case.Rmd[m
[1m+++ b/vignettes/Pathway-case.Rmd[m
[36m@@ -38,14 +38,14 @@[m [mhead(pw_out)[m
 [m
 The visualization of pathway values is different from the presentation of ordinary residuals because two models are involved and an observed-vs-fitted plot is not meaningful. Following the approach by Weller and Barnes, the `pathway_xvr()` function plots the pathway values against the pathway variable. The option `pathwaytype = "pathway_wb` produces a plot for the Weller/Barnes values. The option `pathway_var` specifies the pathway variable to be included in the plot. The plot is a `gg` object that can be customized with the usual `ggplot2` options.[m
 ```{r, fig.height = 6, fig.width = 6}[m
[31m-pathway_xvr(full_model, reduced_model, [m
[32m+[m[32mpathway_xvr(df_full, df_reduced,[m[41m [m
             pathway_var = "disp", [m
             pathway_type = "pathway_wb")[m
 ```[m
 [m
 If the option is `pathway_type = "pathway_gvalue"`, the Gerring pathway values are plotted against the pathway variable. A color scheme is used to distinguish the cases that meet the pathway case requirement ("yes") from those that don't ("no"). [m
 ```{r, fig.height = 6, fig.width = 6}[m
[31m-pathway_xvr(full_model, reduced_model, [m
[32m+[m[32mpathway_xvr(df_full, df_reduced,[m[41m [m
             pathway_var = "disp", [m
             pathway_type = "pathway_gvalue")[m
 ```[m

[33mcommit 6842b91768d41d957a0569e36c35e0921d65ad54[m
Author: Ingo Rohlfing <i.rohlfing@uni-koeln.de>
Date:   Mon Mar 30 23:20:53 2020 +0200

    Corrected variable check in extreme_on_x

[1mdiff --git a/R/extreme.R b/R/extreme.R[m
[1mindex 926542a..d916b61 100644[m
[1m--- a/R/extreme.R[m
[1m+++ b/R/extreme.R[m
[36m@@ -12,7 +12,7 @@[m
 #'[m
 #' @param lmobject Object generated with \code{\link[stats]{lm}}[m
 #' @param ind_var Independent variable for which extremeness values should[m
[31m-#' be calculated. Has to be entered as a character value.[m
[32m+[m[32m#' be calculated. Has to be entered as a character variable.[m
 #'[m
 #' @return A dataframe with[m
 #'[m
[36m@@ -34,17 +34,22 @@[m
 #' extreme_on_x(df, "wt")[m
 #'[m
 #' @export[m
[31m-extreme_on_x <- function(lmobject, ind_var) {[m
[31m-  if (class(lmobject) == "lm") {[m
[31m-    tempx <- lmobject$model[, ind_var][m
[31m-    tempdf <- lmobject$model[m
[31m-    tempdf$`abs. extremeness` <- abs(tempx - mean(tempx))[m
[31m-    tempdf$extremeness <- tempx - mean(tempx)[m
[31m-    tempdf <- tempdf[order(tempdf$`abs. extremeness`, decreasing = T), ][m
[31m-    return(tempdf)[m
[32m+[m[32mextreme_on_x <- function(lmobject = NULL, ind_var = NULL) {[m
[32m+[m[32m  if (!is.null(ind_var)) {[m
[32m+[m[32m    if (class(lmobject) == "lm") {[m
[32m+[m[32m      tempx <- lmobject$model[, ind_var][m
[32m+[m[32m      tempdf <- lmobject$model[m
[32m+[m[32m      tempdf$`abs. extremeness` <- abs(tempx - mean(tempx))[m
[32m+[m[32m      tempdf$extremeness <- tempx - mean(tempx)[m
[32m+[m[32m      tempdf <- tempdf[order(tempdf$`abs. extremeness`, decreasing = T), ][m
[32m+[m[32m      return(tempdf)[m
[32m+[m[32m    }[m
[32m+[m[32m    else{[m
[32m+[m[32m      stop("lmobject input into function is not of class lm")[m
[32m+[m[32m    }[m
   }[m
   else{[m
[31m-    stop("lmobject input into function is not of class lm")[m
[32m+[m[32m    stop("Please specify the independent variable")[m
   }[m
 }[m
 [m
[1mdiff --git a/man/extreme_on_X.Rd b/man/extreme_on_X.Rd[m
[1mindex 306322b..21313d4 100644[m
[1m--- a/man/extreme_on_X.Rd[m
[1m+++ b/man/extreme_on_X.Rd[m
[36m@@ -4,13 +4,13 @@[m
 \alias{extreme_on_x}[m
 \title{Extremeness of cases on an independent variable}[m
 \usage{[m
[31m-extreme_on_x(lmobject, ind_var)[m
[32m+[m[32mextreme_on_x(lmobject = NULL, ind_var = NULL)[m
 }[m
 \arguments{[m
 \item{lmobject}{Object generated with \code{\link[stats]{lm}}}[m
 [m
 \item{ind_var}{Independent variable for which extremeness values should[m
[31m-be calculated. Has to be entered as a character value.}[m
[32m+[m[32mbe calculated. Has to be entered as a character variable.}[m
 }[m
 \value{[m
 A dataframe with[m

[33mcommit 3080ec4323f2b94518ed8bebe231db6719f61437[m
Author: Ingo Rohlfing <i.rohlfing@uni-koeln.de>
Date:   Mon Mar 30 22:59:19 2020 +0200

    Corrected information on default value

[1mdiff --git a/vignettes/Classification-as-typical-and-deviant.Rmd b/vignettes/Classification-as-typical-and-deviant.Rmd[m
[1mindex 931d795..4bdda2d 100644[m
[1m--- a/vignettes/Classification-as-typical-and-deviant.Rmd[m
[1m+++ b/vignettes/Classification-as-typical-and-deviant.Rmd[m
[36m@@ -23,7 +23,7 @@[m [mlibrary(ggplot2) # for illustration of plot customization[m
 [m
 The classification (designation, assignment) of cases as typical and deviant (or another) type needs to be distinguished from the actual choice of cases belonging to a specific type. The package offers two ways of classifying cases. First, one can designate cases using an % *prediction interval* or the *standard deviation of the residuals*. Both classification techniques require an `lm` object as input. [m
 [m
[31m-The approach using the prediction interval additionally requires the specification of the width of the interval. The % prediction interval represents the range of outcome values within which 95% of future outcome values are expected to fall. Following Rohlfing and Starke ([2013](https://doi.org/10.1111/spsr.12052)), a case is designated as typical if the observed outcome value is inside the interval and as deviant otherwise. Here is a simple example using the in-built `mtcars` dataset and a 90% prediction interval. The output of the function is a dataframe with the observed and fitted outcome value, the upper and lower bound of the prediction interval and the case status based on the fitted value and the prediction interval. The default value is 0.9 (for no specific reason).[m
[32m+[m[32mThe approach using the prediction interval additionally requires the specification of the width of the interval. The % prediction interval represents the range of outcome values within which 95% of future outcome values are expected to fall. Following Rohlfing and Starke ([2013](https://doi.org/10.1111/spsr.12052)), a case is designated as typical if the observed outcome value is inside the interval and as deviant otherwise. Here is a simple example using the in-built `mtcars` dataset and a 90% prediction interval. The output of the function is a dataframe with the observed and fitted outcome value, the upper and lower bound of the prediction interval and the case status based on the fitted value and the prediction interval. The default value is 0.95 (for no specific reason).[m
 ```{r}[m
 df <- lm(mpg ~ disp + wt, data = mtcars)[m
 pi_df <- predint(df, piwidth = 0.9)[m

[33mcommit 608c266083693c1b84801cb0ed2c7865b04476e3[m
Author: Ingo Rohlfing <i.rohlfing@uni-koeln.de>
Date:   Mon Mar 30 22:55:38 2020 +0200

    Corrected predint function

[1mdiff --git a/R/classification.R b/R/classification.R[m
[1mindex 1ceca61..4ea5543 100644[m
[1m--- a/R/classification.R[m
[1m+++ b/R/classification.R[m
[36m@@ -33,7 +33,7 @@[m [mpredint <- function(lmobject, piwidth = 0.95) {[m
   if (class(lmobject) == "lm") {[m
     if (piwidth >= 0 & piwidth <= 1) {[m
       # calculating prediction interval[m
[31m-      temp <- as.data.frame(suppressWarnings(predict.lm(df,[m
[32m+[m[32m      temp <- as.data.frame(suppressWarnings(predict.lm(lmobject,[m
                                                         interval = "prediction",[m
                                                         level = piwidth)))[m
       # extracting outcome values[m

[33mcommit cd76b387784a49ef3243fc8a1926e20a3899b9d0[m
Author: Ingo Rohlfing <i.rohlfing@uni-koeln.de>
Date:   Mon Mar 30 22:40:32 2020 +0200

    Corrected Gerring pathway criterion

[1mdiff --git a/R/pathway.R b/R/pathway.R[m
[1mindex 551815e..a72c03e 100644[m
[1m--- a/R/pathway.R[m
[1m+++ b/R/pathway.R[m
[36m@@ -58,7 +58,7 @@[m [mpathway <- function(full_model, reduced_model) {[m
       # absolute difference between residuals[m
       pathway_gvalue <- abs(reduced_resid - full_resid)[m
       # check for Gerring's criterion for pathway values[m
[31m-      pathway_gtype <- ifelse(reduced_resid > full_resid, "yes", "no")[m
[32m+[m[32m      pathway_gtype <- ifelse(abs(reduced_resid) > abs(full_resid), "yes", "no")[m
       comb <- cbind(full_model$model, full_resid, reduced_resid,[m
                     pathway_wb, pathway_gvalue, pathway_gtype)[m
       return(comb)[m

[33mcommit d56c89ba4e1c3d2f0f2d54876889151dce189914[m
Author: Ingo Rohlfing <i.rohlfing@uni-koeln.de>
Date:   Mon Mar 30 22:37:33 2020 +0200

    Corrected plot function and documentation

[1mdiff --git a/.gitignore b/.gitignore[m
[1mindex c833a2c..167cde0 100644[m
[1m--- a/.gitignore[m
[1m+++ b/.gitignore[m
[36m@@ -3,3 +3,4 @@[m
 .RData[m
 .Ruserdata[m
 inst/doc[m
[32m+[m[32mtestcode.R[m
[1mdiff --git a/R/pathway.R b/R/pathway.R[m
[1mindex bb38753..551815e 100644[m
[1m--- a/R/pathway.R[m
[1m+++ b/R/pathway.R[m
[36m@@ -88,13 +88,13 @@[m [mpathway <- function(full_model, reduced_model) {[m
 #' @examples[m
 #' df_full <- lm(mpg ~ disp + wt, data = mtcars)[m
 #' df_reduced <- lm(mpg ~ wt, data = mtcars)[m
[31m-#' pathway_xvr(full_model, reduced_model, pathway_var = "disp",[m
[32m+[m[32m#' pathway_xvr(df_full, df_reduced, pathway_var = "disp",[m
 #' pathway_type = "pathway_wb")[m
 #'[m
 #' @export[m
 pathway_xvr <- function(full_model, reduced_model,[m
                         pathway_var = "variable", pathway_type = "residual") {[m
[31m-  pwdf <- pathway(df_full, df_reduced)[m
[32m+[m[32m  pwdf <- pathway(full_model, reduced_model)[m
   if (pathway_type == "pathway_wb") {[m
     pwplot <- ggplot2::ggplot() +[m
       geom_point(data = pwdf, mapping = aes_string(x = pathway_var,[m
[1mdiff --git a/man/pathway_xvr.Rd b/man/pathway_xvr.Rd[m
[1mindex 4b287a2..acbe472 100644[m
[1m--- a/man/pathway_xvr.Rd[m
[1m+++ b/man/pathway_xvr.Rd[m
[36m@@ -33,7 +33,7 @@[m [mPlot of residuals against pathway variable[m
 \examples{[m
 df_full <- lm(mpg ~ disp + wt, data = mtcars)[m
 df_reduced <- lm(mpg ~ wt, data = mtcars)[m
[31m-pathway_xvr(full_model, reduced_model, pathway_var = "disp",[m
[32m+[m[32mpathway_xvr(df_full, df_reduced, pathway_var = "disp",[m
 pathway_type = "pathway_wb")[m
 [m
 }[m

[33mcommit 99416150bd771d528a8393de2728c6bed660df55[m
Author: Ingo Rohlfing <i.rohlfing@uni-koeln.de>
Date:   Sun Mar 29 17:26:45 2020 +0200

    Added linebreak

[1mdiff --git a/R/globalvariables.R b/R/globalvariables.R[m
[1mindex 036a356..0f67038 100644[m
[1m--- a/R/globalvariables.R[m
[1m+++ b/R/globalvariables.R[m
[36m@@ -1 +1,2 @@[m
[31m-utils::globalVariables(c("df", "df_full", "df_reduced", "fit", "lwr", "outcome", "status", "upr"))[m
[32m+[m[32mutils::globalVariables(c("df", "df_full", "df_reduced", "fit", "lwr",[m
[32m+[m[32m                         "outcome", "status", "upr"))[m

[33mcommit 0fd573e77c78fa577d19208db3d7070751a50dfe[m
Author: Ingo Rohlfing <i.rohlfing@uni-koeln.de>
Date:   Sun Mar 29 17:20:02 2020 +0200

    Dropped date

[1mdiff --git a/DESCRIPTION b/DESCRIPTION[m
[1mindex 2e2fd55..2d230c0 100644[m
[1m--- a/DESCRIPTION[m
[1m+++ b/DESCRIPTION[m
[36m@@ -1,7 +1,6 @@[m
 Package: MMRcaseselection[m
 Type: Package[m
 Title: Case Classification and Choice Based on Regression Results[m
[31m-Date: 2020-03-22[m
 Version: 0.0.0.9000[m
 Authors@R: [m
     person("Ingo", "Rohlfing", email = "i.rohlfing@uni-koeln.de",[m

[33mcommit 0a4fb4b1cfe52938e426c9a2a64d9f9d49098348[m
Author: Ingo Rohlfing <i.rohlfing@uni-koeln.de>
Date:   Sun Mar 29 14:55:07 2020 +0200

    Corrected URLs

[1mdiff --git a/vignettes/Classification-as-typical-and-deviant.Rmd b/vignettes/Classification-as-typical-and-deviant.Rmd[m
[1mindex 1501d9f..931d795 100644[m
[1m--- a/vignettes/Classification-as-typical-and-deviant.Rmd[m
[1m+++ b/vignettes/Classification-as-typical-and-deviant.Rmd[m
[36m@@ -32,7 +32,7 @@[m [mhead(pi_df)[m
 [m
 The designation of cases based on the prediction interval can be visualized with the `predint_plot()` command. The graph plots observed vs. fitted outcome values together with the % prediction interval. The plot is a `gg` object and can be edited with the usual commands of the `ggplot2` package. [m
 [m
[31m-The input has to be a dataframe produced with `predint()`. Each case has its own interval because they can differ between cases. The color scheme is the [viridis color palette](https://cran.r-project.org/web/packages/viridis/vignettes/intro-to-viridis.html) that is accustomed for colorblind readers and also works when printed in grey scale. If the viridis palette is not preferred, one can substitute it with any other `scale_color_*` scheme by adding it to the command.[m
[32m+[m[32mThe input has to be a dataframe produced with `predint()`. Each case has its own interval because they can differ between cases. The color scheme is the [viridis color palette](https://CRAN.R-project.org/package=viridis) that is accustomed for colorblind readers and also works when printed in grey scale. If the viridis palette is not preferred, one can substitute it with any other `scale_color_*` scheme by adding it to the command.[m
 ```{r, fig.height = 6, fig.width = 6}[m
 predint_plot(pi_df)[m
 # Using scale_color_brewer() instead of the viridis palette.[m
[1mdiff --git a/vignettes/Most-typical-and-most-deviant.Rmd b/vignettes/Most-typical-and-most-deviant.Rmd[m
[1mindex 1ddeb20..642c80b 100644[m
[1m--- a/vignettes/Most-typical-and-most-deviant.Rmd[m
[1m+++ b/vignettes/Most-typical-and-most-deviant.Rmd[m
[36m@@ -20,7 +20,7 @@[m [mknitr::opts_chunk$set([m
 library(MMRcaseselection)[m
 ```[m
 [m
[31m-One can use four functions to choose four *types of cases* without classifying all cases as either typical or deviant. The most typical and deviant cases are proposed by Seawright and Gerring ([2008](https://doi.org/10.1177%2F1065912907313077])). [m
[32m+[m[32mOne can use four functions to choose four *types of cases* without classifying all cases as either typical or deviant. The most typical and deviant cases are proposed by Seawright and Gerring ([2008](https://doi.org/10.1177/1065912907313077)).[m[41m [m
 [m
 * The most typical case has the smallest residual of all cases.[m
 * The most deviant case has the largest residual of all cases.[m
